fit <- glm(count ~ spray -1 , data=InsectSprays, family='poisson')
fit <- glm(count ~ spray , data=InsectSprays, family='poisson')
summary(fit)
exp(-0.05588)
help(offset)
y=c(1:10)
x=y-1+rnorm(10)/10
z=c(1:10)
z=z*2
summary(lm(y~x+offset(z)))
coefficients(lm(y~x+offset(z)))
y=c(1:10)
x=y-1+rnorm(10)/10
z=c(1:10)
z=z*2
coefficients(lm(y~x+offset(z)))
z=z*4
coefficients(lm(y~x+offset(z)))
count=c(1:10)
x=y-1+rnorm(10)/10
t=c(1:10)
coefficients(lm(count~x+offset(t)))
t=2*c(1:10)
coefficients(lm(count~x+offset(t)))
coefficients(lm(count~x+offset(t2)))
t2 <- log(10) + t
coefficients(lm(count~x+offset(t2)))
coefficients(lm(count~x+offset(t2)))
coefficients(lm(count~x+offset(t2)))
coefficients(lm(count~x+offset(t2)))+log(10)
coefficients(lm(count~x+offset(t)))
coefficients(lm(count~x+offset(t2)))-log(10)
coefficients(lm(count~x+offset(t)))
coefficients(lm(count~x+offset(t)))
coefficients(lm(count~x+offset(t)))
coefficients(lm(count~x+offset(t2)))
coefficients(lm(count~x+offset(t)))-log(10)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
summary(lm(y ~ xMat))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
summary(lm(y ~ xMat -1))
x
y
summary(lm(y[6:11] ~ x[6:11]))
summary(lm(y[6:11] ~ x[6:11] -1))
-1.02416+2.03723
summary(lm(y ~ xMat -1))
coefficients(fit)
fit <- lm(y ~ xMat -1)
coefficients(fit)
coefficients(fit)[2]+coefficients(fit)[3]
install.packages('shiny')
install.packages('manipulate')
library(manipulate)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
help(abline)
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
install.packages('rCharts')
library(rCharts)
library(shiny)
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
help(dTable)
d
data(airquality)
d
airquality
dTable(airquality, sPaginationType = "full_numbers")
library(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
equire(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
install.package('devtools')
install.packages('devtools')
require(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
setwd('/Users/rezzonic/Documents/Coursera/DataScience/9_DataProducts/PeerAsst/Slidify')
library(slidify)
author('Pitch')
setwd('/Users/rezzonic/Documents/Coursera/DataScience/9_DataProducts/PeerAsst')
author('Slidify-pitch')
top500 <- read.table("top500-summary.txt",header=TRUE)
ddate<-as.Date(paste(as.character(top500$mdate),"-01",sep=""))
dates<- as.Date(paste(levels(top500$mdate),"-01",sep=""))
top500 <- data.frame(mdate=ddate,rank=top500$Rank,RMax=top500$RMax)
mins <- tapply(top500$RMax,top500$mdate,min)
maxs <- tapply(top500$RMax,top500$mdate,max)
mins
flops <- as.data.frame(date=ddate,first=max, last=min)
flops <- data.frame(date=ddate,first=max, last=min)
flops <- data.frame(date=ddate,first=maxs, last=mins)
mins
flops <- data.frame(date=dates,first=maxs, last=mins)
flops
df <- melt(flops,index=date)
library(reshape)
df <- melt(flops,index=date)
help(melt)
df <- melt(flops,id.vars=date)
plot(flops$date, flops$first, col=rgb(0,0,1),
)
df <- melt(flops,id.vars=date)
df <- melt(flops,id.vars=date, variable_name="Rmax [GFLOPs]")
flops <- data.frame(mdate=dates,first=maxs, last=mins)
df <- melt(flops,id.vars=mdate, variable_name="Rmax [GFLOPs]")
df <- melt(flops,id.vars="date", variable_name="Rmax [GFLOPs]")
flops <- data.frame(date=dates,first=maxs, last=mins)
df <- melt(flops,id.vars="date", variable_name="Rmax [GFLOPs]")
df
df <- melt(flops,id.vars="date", variable_name="Rank", varnames="GFLOPs")
df
help(melt)
df$date=as.numeric(as.POSIXct(df$date))*1000
r1 <- hPlot(value ~ date, data = df, group = 'Rank', type = 'line')
library(reshape)
library(rCharts)
top500 <- read.table("top500-summary.txt",header=TRUE)
ddate<-as.Date(paste(as.character(top500$mdate),"-01",sep=""))
dates<- as.Date(paste(levels(top500$mdate),"-01",sep=""))
top500 <- data.frame(mdate=ddate,rank=top500$Rank,RMax=top500$RMax)
mins <- tapply(top500$RMax,top500$mdate,min)
maxs <- tapply(top500$RMax,top500$mdate,max)
flops <- data.frame(date=dates,first=maxs, last=mins)
df <- melt(flops,id.vars="date", variable_name="Rank")
r1 <- rPlot(value ~ date, data=df, group='Rank', type='point')
r1
r1 <- rPlot(value ~ date, data=df, type='point')
# df$date=as.numeric(as.POSIXct(df$date))*1000
r1
require(ggplot2)
r1 <- rPlot(value ~ date, data=df, type='point')
r1
dat = fortify(lm(mpg ~ wt, data = mtcars))
names(dat) = gsub('\\.', '_', names(dat))
p1 <- rPlot(mpg ~ wt, data = dat, type = 'point')
p1
dat
df$date=as.numeric(as.POSIXct(df$date))*1000
r1 <- rPlot(value ~ date, data=df, type='point')
r1
r1 <- rPlot(value ~ value, data=df, type='point')
r1
fortify(df)
r1 <- rPlot(value ~ date, data=fortify(df), type='point')
r1
dat = fortify(lm(mpg ~ wt, data = mtcars))
names(dat) = gsub('\\.', '_', names(dat))
p1 <- rPlot(mpg ~ wt, data = dat, type = 'point')
p1
dat
dat = fortify(lm(mpg ~ wt, data = mtcars))
names(dat) = gsub('\\.', '_', names(dat))
p1 <- rPlot(mpg ~ wt, data = mtcars, type = 'point')
p1
mtcars
df
r1 <- rPlot(value ~ date, data=df, type='point')
# r1 <- hPlot(value ~ date, data = df, group = 'Rank', type = 'line')
r1$xAxis(type = 'datetime', labels = list(
format = '{value:%Y}'
))
r1
r1 <- nPlot(value ~ date, group = 'Rank', data = df, type = 'scatterChart')
r1
df <- melt(flops,id.vars="date", variable_name="Rank")
r1 <- nPlot(value ~ date, group = 'Rank', data = df, type = 'scatterChart')
r1
strftime(df$date,format='%Y')
df$date=strftime(df$date,format='%Y')+strftime(df$date,format='%m')/12
df$date=as.numeric(strftime(df$date,format='%Y'))+as.numeric(strftime(df$date,format='%m'))/12
df$date
r1 <- rPlot(value ~ date, group = 'Rank', data = df, type = 'points')
r1
r1 <- rPlot(value ~ date, group = 'Rank', data = df, type = 'scatterChart')
r1
r1 <- nPlot(value ~ date, group = 'Rank', data = df, type = 'scatterChart')
r1
r1 <- hPlot(value ~ date, group = 'Rank', data = df, type = 'scatterChart')
r1
r1 <- hPlot(value ~ date, group = 'Rank', data = df, type = 'line')
r1 <- rPlot(value ~ date, group = 'Rank', data = df, type = 'point')
r1
p1 <- rPlot(mpg ~ wt, data = dat, type = 'point')
p1
r1 <- rPlot(value ~ date, data = df, type = 'point')
r1
r1 <- dPlot(value ~ date, group = 'Rank', data = df, type = 'point')
r1
install.packages('rjson')
r1
r1 <- rPlot(value ~ date, data = df, type = 'point', color = 'Rank')
r1
df
r1
r1 <- rPlot(value ~ mdate/1000, data = df, type = 'point', color = 'Rank')
top500 <- read.table("top500-summary.txt",header=TRUE)
ddate<-as.Date(paste(as.character(top500$mdate),"-01",sep=""))
dates<- as.Date(paste(levels(top500$mdate),"-01",sep=""))
top500 <- data.frame(mdate=ddate,rank=top500$Rank,RMax=top500$RMax)
mins <- tapply(top500$RMax,top500$mdate,min)
maxs <- tapply(top500$RMax,top500$mdate,max)
flops <- data.frame(mdate=dates,first=maxs, last=mins)
df <- melt(flops,id.vars="mdate", variable_name="Rank")
df$mdate=as.numeric(strftime(df$mdate,format='%Y'))+as.numeric(strftime(df$mdate,format='%m'))/12
r1 <- rPlot(value ~ mdate/1000, data = df, type = 'point', color = 'Rank')
r1
r1 <- hPlot(value ~ mdate, data = df, group = 'Rank', type = 'point')
r1
r1 <- rPlot(value ~ mdate, data = df, type = 'point', color = 'Rank')
print(r1)
m1 <- mPlot(x = "mdate", y = c("first", "last"), type = "Line", data = flops)
m1
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'point')
r1
df <- melt(flops,id.vars="mdate", variable_name="Rank")
df$mdate=as.numeric(strftime(df$mdate,format='%Y'))+as.numeric(strftime(df$mdate,format='%m'))/12
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'point')
df
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'point')
r1
r1$print()
df <- melt(flops,id.vars="mdate", variable_name="Rank")
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'point')
r1
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1
df$mdate=as.numeric(strftime(df$mdate,format='%Y'))+as.numeric(strftime(df$mdate,format='%m'))/12
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + floor(this.x)'
+ 'Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
r1
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + this.x + ' + '<br>Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
h1
r1
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + this.x + '<br>Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
r1
r1 <- hPlot(x="mdate", y="value", data = df, group = 'Rank', type = 'scatter')
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + floor(this.x) + '<br>Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
r1
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + this.x + '<br>Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
r1
r1$tooltip(formatter = "#! function(){
var s = 'year : ' + Math.floor(this.x) + '<br>Rmax : ' + this.y + 'GFLOPs';
return s;
} !#")
r1
r1$xAxis(log="y")
r1
pflops <- ggplot(df, aes(x=mdate,y=value,color=Rank, shape=Rank)) + geom_point()
pflops
pflops <- ggplot(df, aes(x=mdate,y=value,color=Rank, shape=Rank)) + geom_point() +     scale_shape_manual(values=c(1,2,3)) + scale_y_log10(breaks=c(1,1e3,1e6,1e9),labels=c("GFLOPs", "TFLOPs", "PFLOPs", "EFLOPs")) +  geom_smooth(method=lm) + xlab('')+ylab('') + theme(legend.title = element_text(colour="white"))+
library(ggthemes)
require(ggthemes)
pflops <- ggplot(df, aes(x=mdate,y=value,color=Rank, shape=Rank)) + geom_point() +     scale_shape_manual(values=c(1,2,3)) + scale_y_log10(breaks=c(1,1e3,1e6,1e9),labels=c("GFLOPs", "TFLOPs", "PFLOPs", "EFLOPs")) +  geom_smooth(method=lm) + xlab('')+ylab('') + theme(legend.title = element_text(colour="white"))+ scale_color_colorblind()
pflops
help(lm)
lm(value ~ mdate)
flops
lm(first ~ mdate,data=flops)
lm(log(first) ~ mdate,data=flops)
log(first)
log(flops$first)
lm(log(first) ~ mdate,data=flops)
flops$adate <- as.numeric(strftime(flops$mdate,format='%Y'))+as.numeric(strftime(flops$mdate,format='%m'))/12
lm(log(first) ~ adate,data=flops)
fitfirst<-lm(log(first) ~ adate,data=flops)
fitlast<-lm(log(last) ~ adate,data=flops)
fitlast
2/0.6239
1/0.6239
help(log)
fitfirst<-lm(log(first, base=2) ~ adate,data=flops)
fitlast<-lm(log(last, base=2) ~ adate,data=flops)
fitfirst
fitfirst$coefficients[2]
ratefirst<-fitfirst$coefficients[2]
ratelast<-fitlast$coefficients[2]
2^ratefirst
1/ratefirst
flops$first
flops$first[1]*2
```{r, echo=FALSE, message=FALSE, dev.args = list(bg = 'transparent')}
flops <- data.frame(mdate=dates, sums=sums, first=maxs, last=mins)
sums <- tapply(top500$RMax,top500$mdate,sum)
flops <- data.frame(mdate=dates, sums=sums, first=maxs, last=mins)
fitsum<-lm(log(sums, base=2) ~ adate,data=flops)
flops$adate <- as.numeric(strftime(flops$mdate,format='%Y'))+as.numeric(strftime(flops$mdate,format='%m'))/12
fitfirst<-lm(log(first, base=2) ~ adate,data=flops)
fitlast<-lm(log(last, base=2) ~ adate,data=flops)
fitsum<-lm(log(sums, base=2) ~ adate,data=flops)
ratefirst<-fitfirst$coefficients[2]
ratelast<-fitlast$coefficients[2]
ratesum<-fitsum$coefficients[2]
ratesum
ratefirst
ratelast
ratefirst<-fitfirst$coefficients[2]
ratelast<-fitlast$coefficients[2]
ratesum<-fitsum$coefficients[2]
2^ratefirst
2^ratelast
2^ratesum
ratesum*5
2^(ratesum*5)
ratesum
ratesum^5
ratesum
ratesum*5
2^(ratesum*5)
2^(ratesum*10)
2^(ratesum*11)
2^(ratesum*12)
2^(ratesum*11
)
top500
top500 <- read.table("top500-summary.txt",header=TRUE)
top500
library(reshape)
require(ggplot2)
require(ggthemes)
top500 <- read.table("top500-summary.txt",header=TRUE)
ddate<-as.Date(paste(as.character(top500$mdate),"-01",sep=""))
dates<- as.Date(paste(levels(top500$mdate),"-01",sep=""))
str(top500)
top500 <- data.frame(mdate=ddate,rank=top500$Rank,RMax=top500$RMax, OS=top500$Operating.System)
str(top500)
help(table)
with(top500,table(mdate,OS))
OS <- with(top500,table(mdate,OS))
str(OS)
as.data.frame(OS)
osshare <- ggplot(OS, aes(x=mdate,y=Freq,group=OS,fill=OS)) +
geom_area(position="fill") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_discrete(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
class(OS)
OS <- as.data.frame(with(top500,table(mdate,OS)))
osshare <- ggplot(OS, aes(x=mdate,y=Freq,group=OS,fill=OS)) +
geom_area(position="fill") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_discrete(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
osshare
top500 <- read.table("top500-summary.txt",header=TRUE)
str(top500)
OS
osshare <- ggplot(OS, aes(x=mdate,y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_discrete(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=mdate,y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_discrete(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
osshare
str
str(OS)
as.Date(OS$mdate)
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_discrete(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_continuous(breaks=c('1993-06','1998-06','2003-06','2008-06','2013-06')) +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_continuous() +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white"))
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_continuous(limits=c(min(as.Date(OS$mdate)),max(as.Date(OS$mdate)))) +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
scale_x_continuous(limits=c(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))))
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate)))
osshare
OS
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
scale_y_continuous(labels = percent) +
scale_fill_colorblind()
library(scales)
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
scale_y_continuous(labels = percent) +
scale_fill_colorblind()
osshare
?scales
f500_trans <- function() {
trans_new("f500", function(x) 5*x, function(x) 5*x)
}
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
scale_y_continuous(trans="f500") +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
coord_y_continuous(trans="f500") +
scale_fill_colorblind()
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
coord_trans(ytrans="f500") +
scale_fill_colorblind()
osshare
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="f500") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
coord_trans(ytrans="f500") +
scale_fill_colorblind()
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="fill", stat="bin") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
coord_trans(ytrans="f500") +
scale_fill_colorblind()
osshare
?geom_area
osshare <- ggplot(OS, aes(x=as.Date(mdate),y=Freq,group=OS,fill=OS)) +
geom_area(position="stack", stat="identity") +
xlab('') + ylab('') + theme(legend.title = element_text(colour="white")) +
xlim(min(as.Date(OS$mdate)),max(as.Date(OS$mdate))) +
coord_trans(ytrans="f500") +
scale_fill_colorblind()
osshare
OS
OS[OS$mdate=="2014-06-01",]
480/500
top500[top500$mdate=="2014-06-01",]
top500[top500$mdate=="2014-06-01",]
top500$mdate
top500[top500$mdate=="2014-06",]
top500[top500$mdate=="2014-06" & top500$Rank<11,]
flops
1000/20/512
20*512
top500[top500$mdate=="2014-06" & top500$Rank<11,]
